<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
                                   "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- Criado em 21 Dez 2005       -->
<hibernate-mapping package="br.gov.jfrj.siga.dp" schema="CORPORATIVO">
 <class batch-size="500" name="DpPessoa" schema="CORPORATIVO" table="DP_PESSOA">
  <id column="ID_PESSOA" name="idPessoa" type="long">
   <generator class="sequence">
    <param name="sequence">DP_PESSOA_SEQ</param>
   </generator>
  </id>
  <property column="ID_PESSOA_INICIAL" generated="never" lazy="false"
   name="idPessoaIni" type="long"/>
  <property column="DATA_FIM_PESSOA" generated="never" lazy="false"
   name="dataFimPessoa" type="java.util.Date"/>
  <property column="DATA_INI_PESSOA" generated="never" lazy="false"
   name="dataInicioPessoa" type="java.util.Date"/>
  <property column="IDE_PESSOA" generated="never" lazy="false"
   name="idePessoa" type="string"/>
  <property column="DATA_NASC_PESSOA" generated="never" lazy="false"
   name="dataNascimento" type="date"/>
  <property column="NOME_PESSOA" generated="never" lazy="false"
   name="nomePessoa" type="string"/>
  <property column="CPF_PESSOA" generated="never" lazy="false"
   name="cpfPessoa" type="long"/>
  <property column="MATRICULA" generated="never" lazy="false"
   name="matricula" type="long"/>
  <property column="SESB_PESSOA" generated="never" lazy="false"
   name="sesbPessoa" type="string"/>
  <property column="EMAIL_PESSOA" generated="never" lazy="false"
   name="emailPessoa" type="string"/>
  <property column="SIGLA_PESSOA" generated="never" lazy="false"
   name="siglaPessoa" type="string"/>
  <property column="DSC_PADRAO_REFERENCIA_PESSOA" generated="never"
   lazy="false" name="padraoReferencia" type="string"/>
  <property formula="REMOVE_ACENTO(NOME_PESSOA)" generated="never"
   lazy="false" name="nomePessoaAI" type="string"/>
  <property column="SITUACAO_FUNCIONAL_PESSOA" generated="never"
   lazy="false" name="situacaoFuncionalPessoa" type="string"/>
  <property column="DATA_INICIO_EXERCICIO_PESSOA" generated="never"
   lazy="false" name="dataExercicioPessoa" type="date"/>
  <property column="ATO_NOMEACAO_PESSOA" generated="never" lazy="false"
   name="atoNomeacao" type="string"/>
  <property column="DATA_NOMEACAO_PESSOA" generated="never" lazy="false"
   name="dataNomeacao" type="date"/>
  <property column="DATA_POSSE_PESSOA" generated="never" lazy="false"
   name="dataPosse" type="date"/>
  <property column="DATA_PUBLICACAO_PESSOA" generated="never"
   lazy="false" name="dataPublicacao" type="date"/>
  <property column="GRAU_INSTRUCAO_PESSOA" generated="never"
   lazy="false" name="grauInstrucao" type="string"/>
  <property column="ID_PROVIMENTO" generated="never" lazy="false"
   name="idProvimento" type="integer"/>
  <property column="NACIONALIDADE_PESSOA" generated="never" lazy="false"
   name="nacionalidade" type="string"/>
  <property column="NATURALIDADE_PESSOA" generated="never" lazy="false"
   name="naturalidade" type="string"/>
  <property column="FG_IMPRIME_END" generated="never" lazy="false"
   name="imprimeEndereco" type="string"/>
  <property column="SEXO_PESSOA" generated="never" lazy="false"
   name="sexo" type="string"/>
  <property column="TP_SERVIDOR_PESSOA" generated="never" lazy="false"
   name="tipoServidor" type="integer"/>
  <property column="TP_SANGUINEO_PESSOA" generated="never" lazy="false"
   name="tipoSanguineo" type="string"/>
  <property column="ENDERECO_PESSOA" generated="never" lazy="false"
   name="endereco" type="string"/>
  <property column="BAIRRO_PESSOA" generated="never" lazy="false"
   name="bairro" type="string"/>
  <property column="CIDADE_PESSOA" generated="never" lazy="false"
   name="cidade" type="string"/>
  <property column="CEP_PESSOA" generated="never" lazy="false"
   name="cep" type="string"/>
  <property column="TELEFONE_PESSOA" generated="never" lazy="false"
   name="telefone" type="string"/>
  <property column="RG_PESSOA" generated="never" lazy="false"
   name="Identidade" type="string"/>
  <property column="RG_ORGAO_PESSOA" generated="never" lazy="false"
   name="orgaoIdentidade" type="string"/>
  <property column="RG_DATA_EXPEDICAO_PESSOA" generated="never"
   lazy="false" name="dataExpedicaoIdentidade" type="date"/>
  <property column="RG_UF_PESSOA" generated="never" lazy="false"
   name="ufIdentidade" type="string"/>
  <property column="ID_ESTADO_CIVIL" generated="never" lazy="false"
   name="idEstadoCivil" type="integer"/>
  <property column="NOME_EXIBICAO" generated="never" lazy="false"
   name="nomeExibicao" type="string"/>
   <property column="IDIDENTIFICACAO_IDUFF" generated="never" lazy="false"
   name="idIdentificacaoIduff" type="long"/>
   
  <!-- Marcado como false para não conflitar com o idPessoaIni -->
  <many-to-one class="DpPessoa" column="ID_PESSOA_INICIAL"
   insert="false" name="pessoaInicial" update="false"/>
  <many-to-one class="DpLotacao" column="ID_LOTACAO" name="lotacao"/>
  <many-to-one class="DpCargo" column="ID_CARGO" name="cargo"/>
  <many-to-one class="DpFuncaoConfianca" column="ID_FUNCAO_CONFIANCA" name="funcaoConfianca"/>
  <many-to-one class="br.gov.jfrj.siga.dp.CpOrgaoUsuario"
   column="ID_ORGAO_USU" name="orgaoUsuario" not-null="false"/>
  <many-to-one class="br.gov.jfrj.siga.dp.CpTipoPessoa"
   column="ID_TP_PESSOA" name="cpTipoPessoa"/>
  <set inverse="true" name="pessoasPosteriores"
   order-by="DATA_INI_PESSOA desc" sort="unsorted">
   <key column="ID_PESSOA_INICIAL"/>
   <one-to-many class="DpPessoa"/>
  </set>
 </class>
 <query name="consultarPorIdDpPessoa">select pes from DpPessoa pes where
			pes.idPessoaIni = :idPessoa</query>
 <query name="consultarPorSiglaDpPessoa">select pes from DpPessoa pes where
			pes.matricula = :matricula and pes.sesbPessoa = :sesb
	       	and pes.dataFimPessoa = null</query>
 <query name="consultarPorIdInicialDpPessoa">select pes from DpPessoa pes where
			pes.idPessoaIni = :idPessoaIni
	    	and pes.dataFimPessoa = null</query>
 <query name="consultarPorIdInicialDpPessoaInclusiveFechadas">select pes from DpPessoa pes where
			pes.idPessoaIni = :idPessoaIni</query>
 <query name="consultarPorCpf">from DpPessoa pes 
	      where pes.cpfPessoa = :cpfPessoa
	       and pes.dataFimPessoa is null</query>
 <query name="consultarPorEmail">from DpPessoa pes 
	      where pes.emailPessoa = :emailPessoa
	       and pes.dataFimPessoa is null</query>
 <query name="consultarPorOrgaoUsuDpPessoaInclusiveFechadas">from DpPessoa pes 
	      where pes.orgaoUsuario.idOrgaoUsu = :idOrgaoUsu</query>
 <query name="consultarPorFiltroDpPessoa">from DpPessoa pes 
	      where ((upper(pes.nomePessoaAI) like upper('%' || :nome || '%')) or ((pes.sesbPessoa || pes.matricula) like upper('%' || :nome || '%')))
	      	and (:idOrgaoUsu = null or :idOrgaoUsu = 0 or pes.orgaoUsuario.idOrgaoUsu = :idOrgaoUsu)
			and (:lotacao = null or :lotacao = 0 or pes.lotacao.idLotacao = :lotacao)
			and (:situacaoFuncionalPessoa = null or pes.situacaoFuncionalPessoa = :situacaoFuncionalPessoa)
	       	and pes.dataFimPessoa = null
	       	order by pes.nomePessoa</query>
 <query name="consultarQuantidadeDpPessoa">select count(pes) from DpPessoa pes 
	      where ((upper(pes.nomePessoaAI) like upper('%' || :nome || '%')) or ((pes.sesbPessoa || pes.matricula) like upper('%' || :nome || '%'))) 
	      	and (:idOrgaoUsu = null or :idOrgaoUsu = 0 or pes.orgaoUsuario.idOrgaoUsu = :idOrgaoUsu)
			and (:lotacao = null or :lotacao = 0 or pes.lotacao.idLotacao = :lotacao)
			and (:situacaoFuncionalPessoa = null or :situacaoFuncionalPessoa = '' or pes.situacaoFuncionalPessoa = :situacaoFuncionalPessoa)
	       	and pes.dataFimPessoa = null
	       	order by pes.nomePessoa</query>
 <query name="consultarPorFiltroDpPessoaInclusiveFechadas">from DpPessoa pes where idPessoa in (
    		select max(pes.idPessoa)
    		from DpPessoa pes
    		where ((upper(pes.nomePessoaAI) like upper('%' || :nome || '%')) or ((pes.sesbPessoa || pes.matricula) like upper('%' || :nome || '%')))
	      	and (:idOrgaoUsu = null or :idOrgaoUsu = 0 or pes.orgaoUsuario.idOrgaoUsu = :idOrgaoUsu)
	      	and (:lotacao = null or :lotacao = 0 or pes.lotacao.idLotacao = :lotacao)
    		group by pes.idPessoaIni
    		)</query>
 <query name="consultarQuantidadeDpPessoaInclusiveFechadas">select count(distinct pes.idPessoaIni)
				from DpPessoa pes
				where ((upper(pes.nomePessoaAI) like upper('%' || :nome || '%')) or ((pes.sesbPessoa || pes.matricula) like upper('%' || :nome || '%')))
	      			and (:idOrgaoUsu = null or :idOrgaoUsu = 0 or pes.orgaoUsuario.idOrgaoUsu = :idOrgaoUsu)
	      			and (:lotacao = null or :lotacao = 0 or pes.lotacao.idLotacao = :lotacao)
	      	</query>
 <query name="consultarPorCpfMatricula">from DpPessoa pes 
	      where pes.cpfPessoa = :cpfPessoa
	       and pes.matricula = :matricula
	       and pes.dataFimPessoa is null</query>
 <query name="consultarAtivasNaDataOrgao">from DpPessoa pes 
	      where (:idOrgaoUsu = null or :idOrgaoUsu = 0 or pes.orgaoUsuario.idOrgaoUsu = :idOrgaoUsu)
	      and  ((pes.dataInicioPessoa &lt; :dt and pes.dataFimPessoa &gt;= :dt )
	      or (pes.dataInicioPessoa &lt; :dt and pes.dataFimPessoa is null ))</query>
 <query name="consultarPessoasComFuncaoConfianca">from DpPessoa p where p.funcaoConfianca.idFuncao = :idFuncaoConfianca and p.dataFimPessoa is null</query>
 <query name="consultarPessoasComCargo">from DpPessoa p where p.cargo.id = :idCargo and p.dataFimPessoa is null</query>
 <!-- Tentativa de minimizar o número de queries necessário para executar cada request 
	
       u, 
	       pes, 
	       (select max(cpcfg.hisDtIni), max(cpcfg.hisDtFim)	from CpConfiguracao cpcfg),
	       sysdate, 
	       (select per from CpPersonalizacao per, DpPessoa pes2 where per.pessoa.idPessoa = pes2.idPessoa and pes2.idPessoaIni = pes.idPessoaIni)
	 	  from CpIdentidade u , DpPessoa pes   
	      where u.nmLoginIdentidade = :nmUsuario
	       and pes.sesbPessoa = :sesbPessoa
	       and u.dpPessoa.cpfPessoa = pes.cpfPessoa
	       and (u.hisDtFim is null)
	       and (u.dtCancelamentoIdentidade is null)
	       and (u.dtExpiracaoIdentidade is null or u.dtExpiracaoIdentidade > current_date())
	       and (pes.dataFimPessoa is null)
	       and (pes.situacaoFuncionalPessoa in ('1', '2', '31'))
	
	 	  	  DpPessoa as pes, CpPersonalizacao as per
	 	  	      
	       and per.pessoa.idPessoaIni = pes.idPessoaIni
	
	-->
 <query name="consultarDadosBasicos">select 
	       u,  pes
	 	  from CpIdentidade as u 
	 	  	join u.dpPessoa.pessoaInicial pes
	      where u.nmLoginIdentidade = :nmUsuario
	       and pes.sesbPessoa = :sesbPessoa
	       and u.dpPessoa.cpfPessoa = pes.cpfPessoa
	       and (u.hisDtFim is null)
	       and (u.dtCancelamentoIdentidade is null)
	       and (u.dtExpiracaoIdentidade is null or u.dtExpiracaoIdentidade &gt; current_date())
	       and (pes.dataFimPessoa is null)
	       and (pes.situacaoFuncionalPessoa in ('1', '2', '31'))</query>
 <sql-query name="consultarDataEHoraDoServidor"
   read-only="true">SELECT sysdate dt FROM dual<return-scalar
   column="dt" type="timestamp"/>
 </sql-query>
</hibernate-mapping>
