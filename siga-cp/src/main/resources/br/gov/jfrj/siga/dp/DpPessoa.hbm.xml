<?xml version="1.0" encoding='UTF-8'?>
<!DOCTYPE hibernate-mapping PUBLIC
                            "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
                            "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd" >
<!-- Criado em 21 Dez 2005       -->
<hibernate-mapping package="br.gov.jfrj.siga.dp" schema="CORPORATIVO">
	<class name="DpPessoa" mutable="true" table="DP_PESSOA"
		schema="CORPORATIVO" batch-size="500">
		<id name="idPessoa" column="ID_PESSOA" type="long">
			<generator class="sequence">
				<param name="sequence">DP_PESSOA_SEQ</param>
			</generator>
		</id>
		<property name="idPessoaIni" column="ID_PESSOA_INICIAL"
			type="long" />
		<property name="dataFimPessoa" column="DATA_FIM_PESSOA"
			type="java.util.Date" />
		<property name="dataInicioPessoa" column="DATA_INI_PESSOA"
			type="java.util.Date" />
		<property name="idePessoa" column="IDE_PESSOA" type="string" />
		<property name="dataNascimento" column="DATA_NASC_PESSOA"
			type="date" />
		<property name="nomePessoa" column="NOME_PESSOA" type="string" />
		<property name="cpfPessoa" column="CPF_PESSOA" type="long" />
		<property name="matricula" column="MATRICULA" type="long" />
		<property name="sesbPessoa" column="SESB_PESSOA" type="string" />
		<property name="emailPessoa" column="EMAIL_PESSOA"
			type="string" />
		<property name="siglaPessoa"
			column="SIGLA_PESSOA" type="string" />
		<property name="padraoReferencia"
			column="DSC_PADRAO_REFERENCIA_PESSOA" type="string" />
		<property name="nomePessoaAI"
			formula="REMOVE_ACENTO(NOME_PESSOA)" type="string" />
		<property name="situacaoFuncionalPessoa"
			column="SITUACAO_FUNCIONAL_PESSOA" type="string" />

		<property name="dataExercicioPessoa"
			column="DATA_INICIO_EXERCICIO_PESSOA" type="date" />
		<property name="atoNomeacao" column="ATO_NOMEACAO_PESSOA"
			type="string" />
		<property name="dataNomeacao" column="DATA_NOMEACAO_PESSOA"
			type="date" />
		<property name="dataPosse" column="DATA_POSSE_PESSOA"
			type="date" />
		<property name="dataPublicacao" column="DATA_PUBLICACAO_PESSOA"
			type="date" />
		<property name="grauInstrucao" column="GRAU_INSTRUCAO_PESSOA"
			type="string" />
		<property name="idProvimento" column="ID_PROVIMENTO"
			type="integer" />
		<property name="nacionalidade" column="NACIONALIDADE_PESSOA"
			type="string" />
		<property name="naturalidade" column="NATURALIDADE_PESSOA"
			type="string" />
		<property name="imprimeEndereco" column="FG_IMPRIME_END"
			type="string" />
		<property name="sexo" column="SEXO_PESSOA" type="string" />
		<property name="tipoServidor" column="TP_SERVIDOR_PESSOA"
			type="integer" />
		<property name="tipoSanguineo" column="TP_SANGUINEO_PESSOA"
			type="string" />
		<property name="endereco" column="ENDERECO_PESSOA"
			type="string" />
		<property name="bairro" column="BAIRRO_PESSOA" type="string" />
		<property name="cidade" column="CIDADE_PESSOA" type="string" />
		<property name="cep" column="CEP_PESSOA" type="string" />
		<property name="telefone" column="TELEFONE_PESSOA"
			type="string" />
		<property name="Identidade" column="RG_PESSOA" type="string" />
		<property name="orgaoIdentidade" column="RG_ORGAO_PESSOA"
			type="string" />
		<property name="dataExpedicaoIdentidade"
			column="RG_DATA_EXPEDICAO_PESSOA" type="date" />
		<property name="ufIdentidade" column="RG_UF_PESSOA"
			type="string" />
		<property name="idEstadoCivil" column="ID_ESTADO_CIVIL"
			type="integer" />
		<property name="nomeExibicao" column="NOME_EXIBICAO"
			type="string" />


		<!-- Marcado como false para não conflitar com o idPessoaIni -->
		<many-to-one name="pessoaInicial" column="ID_PESSOA_INICIAL"
			class="DpPessoa" insert="false" update="false" />

		<many-to-one name="lotacao" column="ID_LOTACAO"
			class="DpLotacao" />

		<many-to-one name="cargo" column="ID_CARGO" class="DpCargo" />

		<many-to-one name="funcaoConfianca" column="ID_FUNCAO_CONFIANCA"
			class="DpFuncaoConfianca" />

		<many-to-one name="orgaoUsuario" column="ID_ORGAO_USU"
			class="br.gov.jfrj.siga.dp.CpOrgaoUsuario" not-null="false" />
			
		<many-to-one name="cpTipoPessoa" column="ID_TP_PESSOA"
			class="br.gov.jfrj.siga.dp.CpTipoPessoa" />	
			
		<set name="pessoasPosteriores" order-by="DATA_INI_PESSOA desc"
			inverse="true">
			<key column="ID_PESSOA_INICIAL" />
			<one-to-many class="DpPessoa" />
		</set>

	</class>
	<query name="consultarPorIdDpPessoa">
		<![CDATA[select pes from DpPessoa pes where
			pes.idPessoaIni = :idPessoa
	       	]]>
	</query>
	<query name="consultarPorSiglaDpPessoa">
		<![CDATA[select pes from DpPessoa pes where
			pes.matricula = :matricula and pes.sesbPessoa = :sesb
	       	and pes.dataFimPessoa = null]]>
	</query>

	<query name="consultarPorIdInicialDpPessoa">
		<![CDATA[select pes from DpPessoa pes where
			pes.idPessoaIni = :idPessoaIni
	    	and pes.dataFimPessoa = null]]>
	</query>
	<query name="consultarPorIdInicialDpPessoaInclusiveFechadas">
		<![CDATA[select pes from DpPessoa pes where
			pes.idPessoaIni = :idPessoaIni]]>
	</query>

	<query name="consultarPorCpf">
		<![CDATA[from DpPessoa pes 
	      where pes.cpfPessoa = :cpfPessoa
	       and pes.dataFimPessoa is null]]>
	</query>
	
	<query name="consultarPorEmail">
		<![CDATA[from DpPessoa pes 
	      where pes.emailPessoa = :emailPessoa
	       and pes.dataFimPessoa is null]]>
	</query>

	<query name="consultarPorOrgaoUsuDpPessoaInclusiveFechadas">
		<![CDATA[from DpPessoa pes 
	      where pes.orgaoUsuario.idOrgaoUsu = :idOrgaoUsu]]>
	</query>

	<query name="consultarPorFiltroDpPessoa">
		<![CDATA[from DpPessoa pes 
	      where ((upper(pes.nomePessoaAI) like upper('%' || :nome || '%')) or ((pes.sesbPessoa || pes.matricula) like upper('%' || :nome || '%')))
	      	and (:idOrgaoUsu = null or :idOrgaoUsu = 0 or pes.orgaoUsuario.idOrgaoUsu = :idOrgaoUsu)
			and (:lotacao = null or :lotacao = 0 or pes.lotacao.idLotacao = :lotacao)
			and (:situacaoFuncionalPessoa = null or pes.situacaoFuncionalPessoa = :situacaoFuncionalPessoa)
	       	and pes.dataFimPessoa = null
	       	order by pes.nomePessoa]]>
	</query>

	<query name="consultarQuantidadeDpPessoa">
		<![CDATA[select count(pes) from DpPessoa pes 
	      where ((upper(pes.nomePessoaAI) like upper('%' || :nome || '%')) or ((pes.sesbPessoa || pes.matricula) like upper('%' || :nome || '%'))) 
	      	and (:idOrgaoUsu = null or :idOrgaoUsu = 0 or pes.orgaoUsuario.idOrgaoUsu = :idOrgaoUsu)
			and (:lotacao = null or :lotacao = 0 or pes.lotacao.idLotacao = :lotacao)
			and (:situacaoFuncionalPessoa = null or :situacaoFuncionalPessoa = '' or pes.situacaoFuncionalPessoa = :situacaoFuncionalPessoa)
	       	and pes.dataFimPessoa = null
	       	order by pes.nomePessoa]]>
	</query>

	<query name="consultarPorFiltroDpPessoaInclusiveFechadas">
		<![CDATA[from DpPessoa pes where idPessoa in (
    		select max(pes.idPessoa)
    		from DpPessoa pes
    		where ((upper(pes.nomePessoaAI) like upper('%' || :nome || '%')) or ((pes.sesbPessoa || pes.matricula) like upper('%' || :nome || '%')))
	      	and (:idOrgaoUsu = null or :idOrgaoUsu = 0 or pes.orgaoUsuario.idOrgaoUsu = :idOrgaoUsu)
	      	and (:lotacao = null or :lotacao = 0 or pes.lotacao.idLotacao = :lotacao)
    		group by pes.idPessoaIni
    		)]]>
	</query>

	<query name="consultarQuantidadeDpPessoaInclusiveFechadas">
		<![CDATA[select count(distinct pes.idPessoaIni)
				from DpPessoa pes
				where ((upper(pes.nomePessoaAI) like upper('%' || :nome || '%')) or ((pes.sesbPessoa || pes.matricula) like upper('%' || :nome || '%')))
	      			and (:idOrgaoUsu = null or :idOrgaoUsu = 0 or pes.orgaoUsuario.idOrgaoUsu = :idOrgaoUsu)
	      			and (:lotacao = null or :lotacao = 0 or pes.lotacao.idLotacao = :lotacao)
	      	]]>
	</query>
	
	<query name="consultarPorCpfMatricula">
	 <![CDATA[from DpPessoa pes 
	      where pes.cpfPessoa = :cpfPessoa
	       and pes.matricula = :matricula
	       and pes.dataFimPessoa is null]]>
	</query>

	<sql-query name="consultarDataEHoraDoServidor" cacheable="false"
		read-only="true">
		<return-scalar column="dt" type="timestamp" />
		<![CDATA[SELECT sysdate dt FROM dual]]>
	</sql-query>
	
	<query name="consultarAtivasNaDataOrgao">
	 <![CDATA[from DpPessoa pes 
	      where (:idOrgaoUsu = null or :idOrgaoUsu = 0 or pes.orgaoUsuario.idOrgaoUsu = :idOrgaoUsu)
	      and  ((pes.dataInicioPessoa < :dt and pes.dataFimPessoa >= :dt )
	      or (pes.dataInicioPessoa < :dt and pes.dataFimPessoa is null ))]]>
	</query>

	<query name="consultarPessoasComFuncaoConfianca">
		<![CDATA[from DpPessoa p where p.funcaoConfianca.idFuncao = :idFuncaoConfianca and p.dataFimPessoa is null]]>
	</query>
	
	<query name="consultarPessoasComCargo">
		<![CDATA[from DpPessoa p where p.cargo.id = :idCargo and p.dataFimPessoa is null]]>
	</query>
	
	
	
	
	<!-- Tentativa de minimizar o número de queries necessário para executar cada request 
	
       u, 
	       pes, 
	       (select max(cpcfg.hisDtIni), max(cpcfg.hisDtFim)	from CpConfiguracao cpcfg),
	       sysdate, 
	       (select per from CpPersonalizacao per, DpPessoa pes2 where per.pessoa.idPessoa = pes2.idPessoa and pes2.idPessoaIni = pes.idPessoaIni)
	 	  from CpIdentidade u , DpPessoa pes   
	      where u.nmLoginIdentidade = :nmUsuario
	       and pes.sesbPessoa = :sesbPessoa
	       and u.dpPessoa.cpfPessoa = pes.cpfPessoa
	       and (u.hisDtFim is null)
	       and (u.dtCancelamentoIdentidade is null)
	       and (u.dtExpiracaoIdentidade is null or u.dtExpiracaoIdentidade > current_date())
	       and (pes.dataFimPessoa is null)
	       and (pes.situacaoFuncionalPessoa in ('1', '2', '31'))
	
	 	  	  DpPessoa as pes, CpPersonalizacao as per
	 	  	      
	       and per.pessoa.idPessoaIni = pes.idPessoaIni
	
	-->	
	<query name="consultarDadosBasicos">
	 <![CDATA[select 
	       u,  pes
	 	  from CpIdentidade as u 
	 	  	join u.dpPessoa.pessoaInicial pes
	      where u.nmLoginIdentidade = :nmUsuario
	       and pes.sesbPessoa = :sesbPessoa
	       and u.dpPessoa.cpfPessoa = pes.cpfPessoa
	       and (u.hisDtFim is null)
	       and (u.dtCancelamentoIdentidade is null)
	       and (u.dtExpiracaoIdentidade is null or u.dtExpiracaoIdentidade > current_date())
	       and (pes.dataFimPessoa is null)
	       and (pes.situacaoFuncionalPessoa in ('1', '2', '31'))
	       ]]>
	</query>
</hibernate-mapping>


