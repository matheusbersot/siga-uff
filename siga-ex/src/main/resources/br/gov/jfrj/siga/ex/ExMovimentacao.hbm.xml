<?xml version="1.0" encoding='UTF-8'?>
<!DOCTYPE hibernate-mapping PUBLIC
                            "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
                            "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd" >

        <!-- Created Mon Nov 14 13:32:27 GMT-03:00 2005    -->
<hibernate-mapping package="br.gov.jfrj.siga.ex">

        <class name="ExMovimentacao" schema="SIGA" table="EX_MOVIMENTACAO" dynamic-update="true">
                <id name="idMov" column="ID_MOV" type="long">
                        <generator class="sequence">
                                <param name="sequence">EX_MOVIMENTACAO_SEQ</param>
                        </generator>
                </id>

		<property name="dtMov" column="DT_MOV" type="java.util.Date"
			not-null="true" />
		<property name="dtIniMov" column="DT_INI_MOV" type="java.util.Date"
			not-null="true" />
		<property name="dtFimMov" column="DT_FIM_MOV" type="java.util.Date" /> 
		<property name="dtDispPublicacao" column="DT_DISP_PUBLICACAO"
			type="java.util.Date" />
		<property name="dtEfetivaDispPublicacao" column="DT_EFETIVA_DISP_PUBLICACAO"
			type="java.util.Date" />
		<property name="dtEfetivaPublicacao" column="DT_EFETIVA_PUBLICACAO"
			type="java.util.Date" />
		<property name="numTRFPublicacao" column="NUM_TRF_PUBLICACAO"
			type="long" />
		<property name="pagPublicacao" column="PAG_PUBLICACAO" type="java.lang.String" />
		<property name="conteudoBlobMov" column="CONTEUDO_BLOB_MOV"
			type="java.sql.Blob" lazy="true" />
                <property name="nmArqMov" column="NM_ARQ_MOV" type="string" />
                <property name="conteudoTpMov" column="CONTEUDO_TP_MOV" type="string" />
                <property name="descrMov" column="DESCR_MOV" type="string" />
                <property name="obsOrgao" column="OBS_ORGAO_MOV" type="string" />
                <property name="cadernoPublicacaoDje" column="CADERNO_PUBLICACAO_DJE"
                        type="string" />
                <property name="numPaginas" column="NUM_PAGINAS"
                        type="java.lang.Integer" />
                <property name="numPaginasOri" column="NUM_PAGINAS_ORI"
                        type="java.lang.Integer" />
                       

                <many-to-one name="exNivelAcesso" column="ID_NIVEL_ACESSO"
                        class="ExNivelAcesso" />
                <many-to-one name="exTipoMovimentacao" column="ID_TP_MOV"
                        class="ExTipoMovimentacao" not-null="true" />
                <many-to-one name="exTipoDespacho" column="ID_TP_DESPACHO"
                        class="ExTipoDespacho" />
                <many-to-one name="resp" column="ID_RESP"
                        class="br.gov.jfrj.siga.dp.DpPessoa" />
                <many-to-one name="exClassificacao" column="ID_CLASSIFICACAO"
                        class="br.gov.jfrj.siga.ex.ExClassificacao" />
                <many-to-one name="lotaResp" column="ID_LOTA_RESP"
                        class="br.gov.jfrj.siga.dp.DpLotacao" />
                <many-to-one name="cadastrante" column="ID_CADASTRANTE"
                        class="br.gov.jfrj.siga.dp.DpPessoa" />
                <many-to-one name="lotaCadastrante" column="ID_LOTA_CADASTRANTE"
                        class="br.gov.jfrj.siga.dp.DpLotacao" />
                <many-to-one name="subscritor" column="ID_SUBSCRITOR"
                        class="br.gov.jfrj.siga.dp.DpPessoa" />
                <property name="nmFuncaoSubscritor" column="NM_FUNCAO_SUBSCRITOR"
                        type="java.lang.String" />
                <many-to-one name="lotaSubscritor" column="ID_LOTA_SUBSCRITOR"
                        class="br.gov.jfrj.siga.dp.DpLotacao" />
                <many-to-one name="destinoFinal" column="ID_DESTINO_FINAL"
                        class="br.gov.jfrj.siga.dp.DpPessoa" not-null="false" />
                <many-to-one name="lotaDestinoFinal" column="ID_LOTA_DESTINO_FINAL"
                        class="br.gov.jfrj.siga.dp.DpLotacao" not-null="false" />
                <many-to-one name="exMovimentacaoCanceladora" column="ID_MOV_CANCELADORA"
                        class="ExMovimentacao" />
                <many-to-one name="orgaoExterno" column="ID_ORGAO"
                        class="br.gov.jfrj.siga.dp.CpOrgao" not-null="false" />
                <many-to-one name="exMovimentacaoRef" column="ID_MOV_REF"
                        class="ExMovimentacao" />
                <many-to-one name="titular" column="ID_TITULAR"
                        class="br.gov.jfrj.siga.dp.DpPessoa" />
                <many-to-one name="lotaTitular" column="ID_LOTA_TITULAR"
                        class="br.gov.jfrj.siga.dp.DpLotacao" />

                <many-to-one name="exMobil" column="ID_MOBIL" class="ExMobil"
                        not-null="false" />
                <many-to-one name="exMobilRef" column="ID_MOB_REF" class="ExMobil"
                        not-null="false" />
                <many-to-one name="exPapel" column="ID_PAPEL" class="br.gov.jfrj.siga.ex.ExPapel"
                        not-null="false" />
                <set name="exMovimentacaoReferenciadoraSet" order-by="DT_INI_MOV desc"
                        inverse="true">
                        <key column="ID_MOV_REF" />
                        <one-to-many class="ExMovimentacao" />
                </set>

        </class>

        <query name="consultarPorSigla">
                <![CDATA[select mob from ExMobil mob
                inner join fetch mob.exDocumento doc
                where (
                mob.numSequencia=:numSequencia
                and mob.exTipoMobil.idTipoMobil=:idTipoMobil
                and (:idOrgaoUsu = null or :idOrgaoUsu = 0 or doc.orgaoUsuario.idOrgaoUsu = :idOrgaoUsu)
                and doc.idDoc=mob.exDocumento.idDoc
                and doc.anoEmissao=:anoEmissao
                and doc.exFormaDocumento.idFormaDoc=:idFormaDoc
                and doc.numExpediente=:numExpediente
                )]]>
        </query>

        <!-- Somente os "em andamento" ou "pendentes de assinatura" -->
        <query name="consultarParaTransferirEmLote">
                <![CDATA[select mob from ExMobil mob join mob.exMarcaSet mar
                where (mar.dpLotacaoIni.idLotacao=:lotaIni
                and (mar.cpMarcador.idMarcador=2)              
                ) order by mar.dtIniMarca desc]]>
        </query>
       
        <!-- Somente os "a receber" -->
        <query name="consultarParaReceberEmLote">
                <![CDATA[select mob from ExMobil mob join mob.exMarcaSet mar
                where (mar.dpLotacaoIni.idLotacao=:lotaIni
                and (mar.cpMarcador.idMarcador=3
                or mar.cpMarcador.idMarcador=14)
                ) order by mar.dtIniMarca desc]]>
        </query>

        <!-- Somente os "em andamento", "Transferido para Órgão Externo" -->

        <query name="consultarParaArquivarCorrenteEmLote">
                <![CDATA[select mob from ExMobil mob join mob.exMarcaSet mar
                where (mar.dpLotacaoIni.idLotacao=:lotaIni
                and (mar.cpMarcador.idMarcador=2 or mar.cpMarcador.idMarcador=11)              
                ) order by mar.dtIniMarca desc]]>
        </query>
       
        <!-- Somente os "a recolher para arquivo intermediário" -->
        <query name="consultarParaArquivarIntermediarioEmLote">
                <![CDATA[select mob, mar from ExMobil mob join mob.exMarcaSet mar
                where mar.cpMarcador.idMarcador=51              
                and mar.dpLotacaoIni.orgaoUsuario.idOrgaoUsu = :idOrgaoUsu
                and (mar.dtIniMarca is null or mar.dtIniMarca < sysdate)
                and (mar.dtFimMarca is null or mar.dtFimMarca > sysdate)
                order by mob.exDocumento.dtDoc asc]]>
        </query>
        <query name="consultarQuantidadeParaArquivarIntermediarioEmLote">
                <![CDATA[select count(*) from ExMobil mob join mob.exMarcaSet mar
                where mar.cpMarcador.idMarcador=51              
                and mar.dpLotacaoIni.orgaoUsuario.idOrgaoUsu = :idOrgaoUsu
                and (mar.dtIniMarca is null or mar.dtIniMarca < sysdate)
                and (mar.dtFimMarca is null or mar.dtFimMarca > sysdate)
                )]]>
        </query>
       
        <!-- Somente os "a recolher para arquivo permanente" -->
        <query name="consultarParaArquivarPermanenteEmLote">
                <![CDATA[select mob, mar from ExMobil mob join mob.exMarcaSet mar
                where mar.cpMarcador.idMarcador=50      
                and mar.dpLotacaoIni.orgaoUsuario.idOrgaoUsu = :idOrgaoUsu
                and (mar.dtIniMarca is null or mar.dtIniMarca < sysdate)
                and (mar.dtFimMarca is null or mar.dtFimMarca > sysdate)
                order by mob.exDocumento.dtDoc asc]]>
        </query>
        <query name="consultarQuantidadeParaArquivarPermanenteEmLote">
                <![CDATA[select count(*) from ExMobil mob join mob.exMarcaSet mar
                where mar.cpMarcador.idMarcador=50              
                and mar.dpLotacaoIni.orgaoUsuario.idOrgaoUsu = :idOrgaoUsu
                and (mar.dtIniMarca is null or mar.dtIniMarca < sysdate)
                and (mar.dtFimMarca is null or mar.dtFimMarca > sysdate)
                )]]>
        </query>
       
        <!-- Somente os "a eliminar"-->
        <query name="consultarAEliminar">
                <![CDATA[select mob, mar from ExMobil mob join mob.exMarcaSet mar
                where (mar.cpMarcador.idMarcador=7)
                and mar.dpLotacaoIni.orgaoUsuario.idOrgaoUsu = :idOrgaoUsu
                and (:dtIni is null or mob.exDocumento.dtDoc >= :dtIni)
                and (:dtFim is null or mob.exDocumento.dtDoc <= :dtFim)
                and (mar.dtIniMarca is null or mar.dtIniMarca < sysdate)
                and (mar.dtFimMarca is null or mar.dtFimMarca > sysdate)]]>
        </query>
       
        <query name="consultarQuantidadeAEliminar">
                <![CDATA[select count(*) from ExMobil mob join mob.exMarcaSet mar
                where mar.cpMarcador.idMarcador=7              
                and mar.dpLotacaoIni.orgaoUsuario.idOrgaoUsu = :idOrgaoUsu
                and (:dtIni is null or mob.exDocumento.dtDoc >= :dtIni)
                and (:dtFim is null or mob.exDocumento.dtDoc <= :dtFim)
                and (mar.dtIniMarca is null or mar.dtIniMarca < sysdate)
                and (mar.dtFimMarca is null or mar.dtFimMarca > sysdate)
                )]]>
        </query>
       
        <!-- Somente os "em edital de eliminação"-->
        <query name="consultarEmEditalEliminacao">
                <![CDATA[select mob, mar
                from ExMobil mob
                join mob.exMarcaSet mar
                join mob.exDocumento doc
                where (mar.cpMarcador.idMarcador=52)
                and mar.dpLotacaoIni.orgaoUsuario.idOrgaoUsu = :idOrgaoUsu
                and (:dtIni is null or doc.dtDoc >= :dtIni)
                and (:dtFim is null or doc.dtDoc <= :dtFim)
                order by doc.dtDoc desc]]>
        </query>
       
        <!-- Somente os "em andamento" ou "pendentes de assinatura" -->
        <query name="consultarParaAnotarEmLote">
                <![CDATA[select mob from ExMobil mob join mob.exMarcaSet mar
                where (mar.dpLotacaoIni.idLotacao=:lotaIni
                and (mar.cpMarcador.idMarcador=2 or mar.cpMarcador.idMarcador=15)              
                ) order by mar.dtIniMarca desc]]>
        </query>
        
        <query name="listarDespachoPendenteAssinatura">	
				<![CDATA[select mov from ExMovimentacao mov join mov.exMobil mobil 
					where mobil in (select distinct(mob) from ExMobil mob join mob.exMarcaSet mar
               		where mar.cpMarcador.idMarcador = 29) and (mov.exTipoMovimentacao.idTpMov = 5 or mov.exTipoMovimentacao.idTpMov = 6 
               			or mov.exTipoMovimentacao.idTpMov = 7 or mov.exTipoMovimentacao.idTpMov = 8 or mov.exTipoMovimentacao.idTpMov = 18)
					and mov.subscritor.idPessoaIni = :idPessoaIni
					order by mov.dtIniMov desc]]>
		</query>

        <!-- Somente os "em transferencia", "em transferencia eletronica" ou "transferido para orgao externo" -->
        <query name="consultarParaViaDeProtocolo">
                <![CDATA[select mob from ExMobil mob join mob.exMarcaSet mar
                where (mar.dpLotacaoIni.idLotacao=:lotaIni
                and (mar.cpMarcador.idMarcador=23 or mar.cpMarcador.idMarcador=24 or mar.cpMarcador.idMarcador=11)              
                ) order by mar.dtIniMarca desc]]>
        </query>

        <!-- Somente os "em andamento" ou "pendentes de assinatura"
       
                and mov.dtIniMov >= :dtIni
                and (mov.dtFimMov <= :dtFim or mov.dtFimMov = null)
       
        -->
        <query name="consultarMovimentacoesPorLotacaoEntreDatas">
                <![CDATA[
                select mov from ExMovimentacao mov
                inner join mov.exMobil mob
                inner join mob.exDocumento doc
                inner join mov.lotaResp lot
                where (doc.idDoc=mob.exDocumento.idDoc
                and mob.idMobil=mov.exMobil.idMobil
                and lot.idLotacao=mov.lotaResp.idLotacao
                and (lot.idLotacaoIni=:lotaTitular or 0 = :lotaTitular)
                )
                ]]>
        </query>
       
        <!-- Voltar todas as movimentacoes realizadas por uma determinada pessoa em um exato momento. Usado principalmente para gerar segunda-via de protocolos. -->
        <query name="consultarMovimentacoes">
                <![CDATA[from ExMovimentacao mov
                where mov.cadastrante.idPessoaIni=:pessoaIni and mov.dtIniMov=to_date(:data, 'DD/MM/YYYY HH24:MI:SS')          
                ) order by mov.idMov]]>
        </query>

</hibernate-mapping>
