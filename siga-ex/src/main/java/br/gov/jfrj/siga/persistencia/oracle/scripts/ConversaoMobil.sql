/*
 * Script que converte a base de dados pré_mobil para a versão com mobil
 * 
 */

DROP TABLE LOG_CONVERSAO_MOBIL;
DROP SEQUENCE SEQ_LOG_CONVERSAO_MOBIL;
CREATE TABLE LOG_CONVERSAO_MOBIL (ID_LOG INTEGER, TEXTO VARCHAR(100));
CREATE SEQUENCE SEQ_LOG_CONVERSAO_MOBIL;

/* PROCEDURE DESABILITADA POR TER PRIVILÉGIOS INSUFICIENTES */

/*CREATE PROCEDURE LOGAR(TEXTO IN VARCHAR(100)) AUTHID CURRENT_USER IS

BEGIN

    INSERT INTO LOG_CONVERSAO_MOBIL VALUES (SEQ_LOG_CONVERSAO_MOBIL.NEXTVAL,TEXTO);

END LOGAR;
*/


DECLARE
  TYPE REF_CURSOR IS REF CURSOR;
    QRY_MOB_GERAL REF_CURSOR;
    QRY_MOB_GERAL_ID_MOBIL EX_MOBIL.ID_MOBIL%TYPE;

    QRY_MOB REF_CURSOR;
    QRY_MOB_ID_MOBIL EX_MOBIL.ID_MOBIL%TYPE;

    QRY_MOV REF_CURSOR;
    QRY_MOV_RESULT EX_MOVIMENTACAO%ROWTYPE;

    counter NUMBER := 0;

  CURSOR QRY_DOC IS
    SELECT * FROM EX_DOCUMENTO; /*WHERE ID_DOC =888; /* TODO: RETIRAR O WHERE*/


BEGIN
  /*LOG*/INSERT INTO LOG_CONVERSAO_MOBIL VALUES (SEQ_LOG_CONVERSAO_MOBIL.NEXTVAL,'---->INICIANDO CONVERSÃO...');

  FOR DOC IN QRY_DOC LOOP
    OPEN QRY_MOB_GERAL FOR SELECT ID_MOBIL FROM EX_MOBIL WHERE ID_TIPO_MOBIL=1 AND ID_DOC=DOC.ID_DOC;
    FETCH QRY_MOB_GERAL INTO QRY_MOB_GERAL_ID_MOBIL;
    /*LOG*/INSERT INTO LOG_CONVERSAO_MOBIL VALUES (SEQ_LOG_CONVERSAO_MOBIL.NEXTVAL,'*** Verificando se DOC.ID_DOC = ' ||  DOC.ID_DOC || ' tem mobil geral...');
    IF QRY_MOB_GERAL%notfound THEN
      /*CRIA MOBIL GERAL CASO NÃO EXISTA*/
      /*LOG*/INSERT INTO LOG_CONVERSAO_MOBIL VALUES (SEQ_LOG_CONVERSAO_MOBIL.NEXTVAL,'*** DOC.ID_DOC = ' ||  DOC.ID_DOC || ' NÃO tem mobil geral...');
      INSERT INTO EX_MOBIL (ID_MOBIL,ID_DOC,ID_TIPO_MOBIL,NUM_SEQUENCIA) VALUES (EX_MOBIL_SEQ.NEXTVAL,DOC.ID_DOC,1, 1);
      /*LOG*/INSERT INTO LOG_CONVERSAO_MOBIL VALUES (SEQ_LOG_CONVERSAO_MOBIL.NEXTVAL,'EX_DOCUMENTO.ID_DOC = ' || DOC.ID_DOC  || ' Mobil geral criado!');

    ELSE
      /*LOG*/INSERT INTO LOG_CONVERSAO_MOBIL VALUES (SEQ_LOG_CONVERSAO_MOBIL.NEXTVAL,DOC.ID_DOC || ' MOBIL GERAL já existe');
    END IF;

    /*LOG*/INSERT INTO LOG_CONVERSAO_MOBIL VALUES (SEQ_LOG_CONVERSAO_MOBIL.NEXTVAL,'*** Buscando as movimentações do EX_DOCUMENTO = ' ||  DOC.ID_DOC || ' que ainda NÃO tem EX_MOBIL');
    OPEN QRY_MOV FOR SELECT * FROM EX_MOVIMENTACAO WHERE ID_MOBIL IS null AND NUM_VIA <> 0 AND ID_DOC=DOC.ID_DOC;

    LOOP

      FETCH QRY_MOV INTO QRY_MOV_RESULT;
      EXIT WHEN QRY_MOV%notfound;

      OPEN QRY_MOB FOR SELECT ID_MOBIL FROM EX_MOBIL WHERE ID_DOC = DOC.ID_DOC AND NUM_SEQUENCIA = QRY_MOV_RESULT.NUM_VIA AND ID_TIPO_MOBIL = 2;
      FETCH QRY_MOB into QRY_MOB_ID_MOBIL;

      IF QRY_MOB%notfound THEN
        /*LOG*/INSERT INTO LOG_CONVERSAO_MOBIL VALUES (SEQ_LOG_CONVERSAO_MOBIL.NEXTVAL,'Criando EX_MOBIL...') ;
        INSERT INTO EX_MOBIL (ID_MOBIL,ID_DOC,ID_TIPO_MOBIL,NUM_SEQUENCIA) VALUES (EX_MOBIL_SEQ.NEXTVAL,DOC.ID_DOC,2,QRY_MOV_RESULT.NUM_VIA);
        /*LOG*/INSERT INTO LOG_CONVERSAO_MOBIL VALUES (SEQ_LOG_CONVERSAO_MOBIL.NEXTVAL,'EX_MOBIL criado!');

        /*ATUALIZA O CURSOR COM O NOVO EX_MOBIL CRIADO*/
        CLOSE QRY_MOB;
        OPEN QRY_MOB FOR SELECT ID_MOBIL FROM EX_MOBIL WHERE ID_DOC = DOC.ID_DOC AND NUM_SEQUENCIA = QRY_MOV_RESULT.NUM_VIA AND ID_TIPO_MOBIL = 2;
        FETCH QRY_MOB into QRY_MOB_ID_MOBIL;

      END IF;

      UPDATE EX_MOVIMENTACAO SET ID_MOBIL=QRY_MOB_ID_MOBIL WHERE ID_MOV=QRY_MOV_RESULT.ID_MOV;
      /*LOG*/INSERT INTO LOG_CONVERSAO_MOBIL VALUES (SEQ_LOG_CONVERSAO_MOBIL.NEXTVAL,'Apontando o EX_MOVIMENTACAO.ID_MOV= ' || QRY_MOV_RESULT.ID_MOV || ' para EX_MOBIL.ID_MOBIL=' || QRY_MOB_ID_MOBIL );
      close QRY_MOB;

    END LOOP;

    close QRY_MOV;

  END LOOP;

  /*LOG*/INSERT INTO LOG_CONVERSAO_MOBIL VALUES (SEQ_LOG_CONVERSAO_MOBIL.NEXTVAL,'---->CONVERSÃO FINALIZADA!');
  COMMIT;
  /*SELECT * FROM LOG_CONVERSAO_MOBIL ORDER BY ID_LOG;*/
END;